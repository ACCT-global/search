type Query {
  """
  Get top searches for a given store.

  Using paidNavigation filter you'll be able to filter out words that shouldn't be shown
  when the user comes from a paid navigation (e.g. google ads, bing ads).
  """
  topSearches(store: String!, paidNavigation: Boolean): TopSearchesOutput

  """
  Get suggestion searches for a given search term.
  """
  suggestionSearches(store: String!, term: String!): SuggestionSearchesOutput

  """
  Get suggestion products for a given search term.
  """
  suggestionProducts(
    store: String!
    term: String!
    attributeKey: String
    attributeValue: String
  ): SuggestionProductsOutput

  """
  Get attribute keys for a store.
  """
  attributeKeys(store: String!): [AttributeResponseKey]!

  """
  Get attribute values for a given attribute.
  """
  attributeValues(
    store: String!
    attribute: String!
    filters: [ResultRequestAttributeText]
  ): [AttributeResponseValue]!

  searchResult(
    store: String!
    attributePath: String
    query: String
    page: Int
    count: Int
    sort: String
    operator: String
    fuzzy: Int
    leap: Boolean
  ): ResultResponse

  """
  Returns products list filtered and ordered
  """
  searchQuery(
    """
    Terms that is used in search e.g.: eletronics/samsung
    """
    query: String = ""
    # """
    # Defines terms types: Brand, Category, Department e.g.: c,b
    # """
    # map: String = ""
    # """
    # Filter by category. {a}/{b} - {a} and {b} are categoryIds
    # """
    # category: String = ""
    # """
    # Array of product specification. specificationFilter_{a}:{b} - {a} is the specificationId, {b} = specification value
    # """
    # specificationFilters: [String]
    # """
    # Filter by price range. e.g.: {a} TO {b} - {a} is the minimum price "from" and {b} is the highest price "to"
    # """
    # priceRange: String = ""
    # """
    # Filter by collection. where collection also know as productClusterId
    # """
    # collection: String = ""
    # """
    # Filter by availability at a specific sales channel. e.g.: salesChannel:4 if want filter by available products for the sales channel 4
    # """
    # salesChannel: String = ""
    """
    Order by a criteria. OrderByPriceDESC/OrderByPriceASC, OrderByTopSaleDESC, OrderByReviewRateDESC, OrderByNameASC/OrderByNameDESC, OrderByReleaseDateDESC, OrderByBestDiscountDESC
    """
    orderBy: String = "OrderByPriceDESC"
    """
    Pagination item start
    """
    from: Int = 0
    """
    Pagination item end
    """
    to: Int = 20
    # """
    # If true, uses isAvailablePerSalesChannel_ parameter on query with segment's sales channel. Will override any given salesChannel arg
    # """
    # hideUnavailableItems: Boolean = false

    # Below are Biggy's search specific options
    """
    Query operator overload, should be maintained on subsequent queries
    """
    operator: String
    """
    Fuzzy level overload, should be maintained on subsequent queries
    """
    fuzzy: Int
    """
    Leap query string, avoid redirect loop.
    """
    leap: Boolean
    """
    Facets as URL path. e.g. /category/eletronics
    """
    attributePath: String
  ): SearchQuery @cacheControl(scope: SEGMENT, maxAge: SHORT) @withSegment
}

type SearchQuery {
  productSearch: ProductSearch
  facets: Facets
}
